{ "scopeName"      : "source.templateDL",
  "$schema"        : "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name"           : "TemplateDL",
  "patterns": [
    { "include"    : "#comments"
    },
    { "include"    : "#constants"
    },
    { "include"    : "#keywords"
    },
    { "include"    : "#strings"
    },
    { "include"    : "#uris"
    },
    { "include"    : "#variables"
    },
    { "include"    : "#variablePattern"
    },
    { "include"    : "#uriPattern"
    }
  ],
  "repository"     : 
  { "definitions": 
    { "name"       : "keyword.meta.includeArguments.item.templateDL",
      "patterns"   : 
      [ { "name"   : "keyword.meta.includeArguments.name.templateDL",
          "match"  : "\\b(\\w+)\\b"
        },
        { "name"   : "keyword.meta.includeArguments.assignOP.templateDL",
          "match"  : "\\s*=\\s*"
        },
        { "name"   : "keyword.meta.includeArguments.value.templateDL",
          "match"  : "([\"']?)([^\"'\\s]+)\\1(?=\\s|$)",
          "captures": 
          { "1": { "name" : "constant.character.escape.templateDL" },
            "2": { "name" : "keyword.meta.includeArguments.value.templateDL" }
          }
        }
      ]
    },
		"variablePattern":
    { "patterns": [
				{ "name": "variable.name.begin.templateDL", 
				  "match": "_&" 
				},
        { "name": "variable.name.templateDL", 
          "match": "(?<=_&)[A-Za-z0-9_]+" 
        },
				{ "name": "keyword.pseudoElement.templateDL", 
				   "match": "(?<=[A-Za-z0-9_])::" 
				},
				{ "name": "variable.pseudo.operation.name.templateDL", 
				  "match": "(?<=::)(.*?)(?=\\.|$)" 
				}
			]
		},
    "hostCmdPattern": {
      "patterns": [
        { "name": "source.templateDL keyword.meta.hostCmd.text.templateDL",
          "patterns" :
           [ { "include"  : "#strings" },
             { "include"  : "#variablePattern" },
             { "include"  : "#operators" },
             { "include"  : "#functionNames" },
             { "include"  : "#booleanTrueValues" },
             { "include"  : "#booleanFalseValues" },
             { "include"  : "#variableNames" },
             { "include"  : "#numerics" }
           ]
        }
      ]
    },
    "uriPattern": {
      "patterns": [
        { "name": "source.templateDL keyword.uri.templateDL",
          "patterns":
          [ { "include"  : "#variables" },
            { "include"  : "#strings" },
            { "include"  : "#hostCmdPattern" }
          ]
        }
      ]
    },
    "comments"     : 
    { "patterns"   : 
      [ { "name"   : "comment.single.line.templateDL",
          "begin"  : "_//",
          "end"    : "\n",
          "patterns":
          [ { "include"  : "#variables" },
            { "include"  : "#strings" },
            { "include"  : "#hostCommands" }
          ]
        },
        { "name"   : "comment.multi.line.templateDL",
          "begin"  : "_/[*]",
          "end"    : "_[*]/"
        }
      ]
    },
    "numerics" :
    { "name" : "constant.math.numbers",
      "match" : "([+\\-\\.0-9])"
    },
    "operators" :
    { "name" : "constant.math.operators",
      "match" : "([=\\+\\-\/\\^\\*\\%\\.<>!|&])"
    },
    "booleanTrueValues" :
    { "name" : "constant.math.true.booleanValue",
      "match" : "\\b(true|1)\\b"
    },
    "booleanFalseValues" :
    { "name" : "constant.math.false.booleanValue",
      "match" : "\\b(false|0)\\b"
    },
    "functionNames" :
    { "name": "keyword.meta.function.templateDL",
    "match": "\\b(toValidNameChars|center|padLeft|padRight|trim|trimLeft|trimRight|toTitleCase|toLowerCase|toUpperCase|toLowerSnakeCase|toUpperSnakeCase|toTitleSnakeCase|toUpperCamelCase|toLowerCamelCase|toKebabCase|toLowerKebabCase|toUpperKebabCase|isNumeric|isNull|isUndefined|isEmpty|isUsable|isInitialized|coalesce)\\b"
    },
    "variableNames" :
    { "name" : "constant.math.varNames",
      "match" : "\\b[a-zA-Z_][a-zA-Z_0-9]*\\b"
    },
    "argumentList": 
    {
      "name": "keyword.meta.argList.templateDL",
      "match": "(\\b[a-zA-Z_][a-zA-Z_0-9]*)(?:\\s*(=)\\s*('[^']*'|\"[^\"]*\"|\\S+))?",
      "captures": {
          "1": { "name": "keyword.meta.defineVariableName.templateDL" },
          "2": { "name": "constant.math.operators" },
          "3": { "name": "keyword.meta.defineVariableValue.templateDL" }
      }
  },
    "constants"    : 
    { "patterns"   : 
      [ { "name"   : "constant.character",
          "match"  : "(_{|_})"
        },
        { "name"   : "constant.true.boolean",
          "match"  : "(?i)\\b(TRUE|YES|ON|ENABLE)\\b"
        },
        { "name"   : "constant.false.boolean",
          "match"  : "(?i)\\b(FALSE|NO|OFF|DISABLE)\\b"
        }
      ]
    },
    "keywords"     : 
    { "patterns"   : 
      [ { "name"   : "keyword.meta.include.templateDL",
          "match"  : "_#INCLUDE\\s+([^\\s]+)\\s*([\\s\\S]*?)(?=\\s*\\b_#INCLUDE\\b|$)",
          "captures": 
          { "1" : { "name"         : "keyword.uri.templateDL",
                    "patterns"     : [ { "include" : "#uris" } ] 
                  },
            "2":  { "name"         : "keyword.meta.includeArguments.templateDL",
                    "patterns"     :  
                    [ { "include"  : "#strings" },
                     { "include"  : "#variablePattern" },
                     { "include"  : "#operators" },
                     { "include"  : "#functionNames" },
                     { "include"  : "#booleanTrueValues" },
                     { "include"  : "#booleanFalseValues" },
                     { "include"  : "#variableNames" },
                     { "include"  : "#numerics" }
                   ]
                 }
           }
        },
        { "name": "keyword.meta.hostCmd.templateDL",
          "match": "(_<)(.*?)(_\\<)",
          "captures":
          { "1": { "name": "keyword.meta.hostCmd.indicator.templateDL" },
            "2": { "name": "keyword.meta.hostCmd.text.templateDL",
                   "patterns" :
                   [ { "include"  : "#strings" },
                     { "include"  : "#variablePattern" },
                     { "include"  : "#operators" },
                     { "include"  : "#functionNames" },
                     { "include"  : "#booleanTrueValues" },
                     { "include"  : "#booleanFalseValues" },
                     { "include"  : "#variableNames" },
                     { "include"  : "#numerics" }
                   ]
                 },
            "3": { "name": "keyword.meta.hostCmd.indicator.templateDL" }
          }       
        },
        { "name"      : "keyword.meta.defineCursorStatement.templateDL",
          "match"     : "(?<=(_\\#CURSOR\\s))([A-Za-z0-9_]+)\\s*(?:\\b(SQL|CSV|JSON|XMI)\\b\\s*)?",
          "captures"  :
          { "1": { "name" : "keyword.meta.looping.templateDL" },
            "2": { "name" : "keyword.meta.defineCursorName.templateDL" },
            "3": { "name" : "keyword.meta.context.templateDL" },
            "4": { "name" : "keyword.meta.defineCursorStatement.templateDL"}
          }
        },
        { "name": "keyword.meta.conditional.templateDL",
          "match": "^\\s*\\b(_\\#IF|_\\#ELSEIF|_[?])\\s+(.*)$",
          "captures" : {
          "1" : { "name" : "keyword.meta.conditional.templateDL" },
          "2" : { "name" : "keyword.meta.hostCmd.text.templateDL",
                  "patterns" : 
                      [ {"include"   : "#hostCommands" },
                        { "include"  : "#strings" },
                        { "include"  : "#variablePattern" },
                        { "include"  : "#operators" },
                        { "include"  : "#functionNames" },
                        { "include"  : "#booleanTrueValues" },
                        { "include"  : "#booleanFalseValues" },
                        { "include"  : "#variableNames" },
                        { "include"  : "#numerics" }
                     ]
                }
          }
        },
        { "name": "keyword.meta.conditional.templateDL",
          "match": "^\\s*\\b(_\\#ELSE|_\\#ENDIF)\\b.*$"
        },
        { "name": "keyword.meta.conditional.templateDL",
          "match": "^\\s*\\b(_\\#IFDEF|_\\#IFNDEF|_\\#IFSET|_\\#IFNSET)\\b\\s+(.*)$",
          "captures" : {
          "1" : { "name" : "keyword.meta.conditional.templateDL" },
          "2" : { "name" : "keyword.meta.defineVariableName.templateDL" }
          }
        },
        { "name": "source.templateDL meta.terminate.templateDL",
          "match": "(?i)\\b(_\\#EXIT)\\b"
        },
        { "name": "keyword.meta.looping.templateDL",
          "match": "(?i)\\b(_\\#LOOP|_\\#ENDLOOP)\\b"
        },
        { "name": "keyword.meta.looping.templateDL",
          "match" : "(?<=\\b(_\\#LOOP)\\b)\\s*([A-Za-z0-9_]+)",
          "captures" : {
            "1" : { "name": "keyword.meta.looping.templateDL" },
            "2" : { "name": "keyword.meta.defineCursorName.templateDL" }
          }
        },
        { "name": "keyword.meta.looping.move.templateDL",
          "match": "^\\s*(_\\#MOVE)\\s*?([+|-])?([0-9_]+)",
          "captures": {
            "1": { "name" : "keyword.meta.looping.move.templateDL" },
            "2": { "name" : "keyword.meta.looping.move.direction.templateDL" },
            "3": { "name" : "keyword.meta.looping.move.steps.templateDL" }
          }
        },
        { "name"        : "keyword.meta.looping.break.templateDL",
          "match"       : "(?i)^\\s*\\b(_\\#BREAK)\\b"
        },
        { "name"        : "keyword.meta.output.templateDL",
          "match"       : "(?i)\\b(_#OUTPUT|_#WORDWRAP|_#WW)\\b"
        },
        { "name"        : "keyword.meta.output.templateDL",
          "match"       : "(?i)\\b(_#PUT|_#PUTLINE)\\b(.*)",
          "captures":
          { "2": { "name" : "keyword.meta.output.text.templateDL" }
          }
        },
        { "name"        : "keyword.meta.conditional.special.templateDL",
          "match"       : "(_[?]|_:|\\s*_\\\\s*$)"
        },
        { "name"        : "keyword.meta.macro.templateDL",
          "match"       : "\\b(_#(?!BREAK|CURSOR|DUMP|DEBUG|TRACE|DEFINE|ECHO|EOF|ENDIF|EXIT|IF|IFDEF|IFNDEF|IFSET|IFNSET|ENDIF|ELSEIF|ELSE|INCLUDE|LOOP|ENDLOOP|{|}|MOVE|OUTPUT|PUT|PUTLINE|SET|WW)\\w+)\\b"
        },
        { "name"        : "keyword.meta.define.templateDL",
          "match"       : "(?<=(_\\#DEFINE\\s))([A-Za-z0-9_&\\.\\<]+)?([:]{2})?\\s*?([A-Za-z0-9_]+)?\\s*(.*)?$",
          "captures"    :
          { "2": { "name" : "keyword.meta.defineVariableName.templateDL" ,
                   "patterns" : 
                   [ {"include": "#hostCommands" } ]
                 },
            "3": { "name" : "keyword.pseudoElement.templateDL" },
            "4": { "name" : "variable.pseudo.operation.name.templateDL" },
            "5": { "name" : "keyword.meta.defineVariableValue.templateDL",
                   "patterns" : 
                   [ {"include": "#hostCommands" } ]
                 }
          }
        },
        { "name"     : "keyword.meta.define.templateDL",
          "match"    : "(?<=_\\#SET\\s)\\s*(TYPE)\\s*(.*)",
          "captures" : {
            "1": { "name" : "keyword.meta.context.templateDL" },
            "2": { "name" : "keyword.uri.templateDL",
                   "patterns" : [ { "include" : "#uris" }
                                ] 
                  }
          }
        },
        { "name": "keyword.meta.define.templateDL",
          "match": "(?<=(_\\#SET\\s))\\s*(ENVIRONMENT|GLOBAL)?\\s*([A-Za-z0-9_&\\.\\<]+)?([:]{2})?\\s*?([A-Za-z0-9_]+)?\\s*(.*)?$",
          "captures":
          { "1": { "name" : "keyword.meta.define.templateDL" },
            "2": { "name" : "keyword.meta.context.templateDL" },
            "3": { "name" : "keyword.meta.defineVariableName.templateDL" ,
                   "patterns" : 
                    [ {"include": "#hostCommands" } ]
                 },
            "4": { "name" : "keyword.pseudoElement.templateDL" },
            "5": { "name" : "variable.pseudo.operation.name.templateDL" },
            "6": { "name" : "keyword.meta.defineVariableValue.templateDL",
                   "patterns" : 
                     [ {"include": "#hostCommands" } ]
                 }
          }
        },
        { "name"     : "keyword.meta.define.templateDL",
          "match"    : "(?<=(_\\#SET\\s))\\s*([A-Za-z0-9_&\\.\\<]+)?([:]{2})?\\s*?([A-Za-z0-9_]+)?\\s*(.*)?$",
          "captures" :
            { "2": { "name" : "keyword.meta.defineVariableName.templateDL" ,
                     "patterns" : 
                       [ {"include": "#hostCommands" } ]
                   },
              "3": { "name" : "keyword.pseudoElement.templateDL" },
              "4": { "name" : "variable.pseudo.operation.name.templateDL" },
              "5": { "name" : "keyword.meta.defineVariableValue.templateDL" }
            }
        },
        { "name": "keyword.meta.setVariableName.templateDL",
          "match": "(?<=_\\#SET\\s)\\b(?!ENVIRONMENT|GLOBAL)\b\\s+([A-Za-z0-9_&\\.\\<]+)?([:]{2})?\\s*?([A-Za-z0-9_]+)?\\s+(.*)$",
          "captures" : 
            { "2" : { "name" : "keyword.meta.defineVariableName.templateDL"  ,
                      "patterns" : 
                       [ {"include": "#hostCommands" } ]
                    },
              "3" : { "name" : "keyword.pseudoElement.templateDL"  },
              "4" : { "name" : "variable.pseudo.operation.name.templateDL" },
              "5" : { "name" : "keyword.meta.defineVariableValue.templateDL",
                      "patterns" : 
                      [ {"include": "#hostCommands" } ]
                    }
            }
        },
        { "name": "keyword.meta.setVariableName.templateDL",
          "match": "(?<=_\\#SET\\s)\\s*?(ENVIRONMENT|GLOBAL)?\\s+([A-Za-z0-9__&\\.\\<]+)?([:]{2})?\\s*?([A-Za-z0-9_]+)?\\s+(.*)$",
          "captures" : 
            { "2" : { "name" : "keyword.meta.context.templateDL"  },
              "3" : { "name" : "keyword.meta.defineVariableName.templateDL" ,
                      "patterns" : 
                        [ {"include": "#hostCommands" } ]
                    },
              "4" : { "name" : "keyword.pseudoElement.templateDL"  },
              "5" : { "name" : "variable.pseudo.operation.name.templateDL" },
              "6" : { "name" : "keyword.meta.defineVariableValue.templateDL" }
            }
        },
        { "name": "keyword.meta.debugging.templateDL",
          "match": "(?i)\\b(_#DUMP|_#ECHO|_#TRACE|_#DEBUG)\\b"
        },
        { "name"     : "keyword.meta.debugging.templateDL",
          "match"    : "(?<=(_\\#ECHO\\s))(INPUT|OUTPUT|RULER)?\\s*((?:TRUE|YES|ON|ENABLE|FALSE|NO|OFF|DISABLE)?)?\\s*(.*?)(?=_\\#ECHO|\\r?$)",
          "captures" :
          { "1" : { "name"     : "keyword.meta.debugging.templateDL" },
            "2" : { "name"     : "keyword.meta.context.templateDL" },
            "3" : { "patterns" : 
                       [ { "name": "constant.true.boolean",
                           "match": "(?i)\\b(TRUE|YES|ON|ENABLE)\\b"
                         },
                         { "name": "constant.false.boolean",
                           "match": "(?i)\\b(FALSE|NO|OFF|DISABLE)\\b"
                         }
                       ]
                  },
            "4" : { "name" : "keyword.meta.textMsg.templateDL",
                    "patterns" : 
                      [ {"include": "#hostCommands" },
                        { "include": "#strings" },
                        { "include": "#variablePattern" }
                     ]
                  }
          }
        },
        { "name": "keyword.meta.debugging.templateDL",
          "match": "(?<=(_\\#DUMP\\s))\\s*\\b(ENVIRONMENT|SETTINGS|STACK|LOCAL|MACROS|CURSORS|ALL)\\b\\s*$",
          "captures": 
          { "1" : { "name" : "keyword.meta.debugging.templateDL" },
            "2" : { "name" : "keyword.meta.context.templateDL" }
          }
        },
        { "name": "keyword.meta.exitMsg.templateDL",
          "match": "(?<=(_\\#EXIT\\s))\\s*([0-9_]+)?\\s*(.*)?$",
          "captures": {
            "2": {
              "name": "keyword.meta.exitCode.templateDL"
            }
           }
        },
        { "name": "keyword.meta.output.options.begin.templateDL",
          "match": "(?<=(_\\#OUTPUT\\s))\\s*(BEGIN)\\s*(.*)?",
          "captures":
          { "2": { "name" : "keyword.meta.output.options.begin.templateDL" },
            "3": { "name" : "keyword.uri.templateDL",
                   "patterns" : 
                    [ {"include": "#hostCommands" } ]
                 }
          }
        },
        { "name": "keyword.meta.output.options.pause.templateDL",
          "match": "(?<=(_\\#OUTPUT\\s))\\s*(PAUSE)\\s*(.*)?"
        },
        { "name": "keyword.meta.output.options.resume.templateDL",
          "match": "(?<=(_\\#OUTPUT\\s))\\s*(RESUME)\\s*(.*)?"
        },
        { "name": "keyword.meta.output.options.close.templateDL",
          "match": "(?<=(_\\#OUTPUT\\s))\\s*(CLOSE)\\s*(.*)?"
        },
        { "name": "keyword.meta.undefine.templateDL",
          "match": "(?i)\\b(_#UNSET|_#UNDEF|_#UNDEFINE)\\b"
        },
        { "name": "keyword.meta.undefine.templateDL",
          "match": "(?<=(_\\#UNSET\\b)|(_\\#UNDEFINE\\b)|(_\\#UNDEF\\b))\\s*([A-Za-z0-9_]+)",
          "captures": 
          { "1": { "name" : "keyword.meta.undefine.templateDL" },
            "2": { "name" : "keyword.meta.undefine.templateDL" },
            "3": { "name" : "keyword.meta.undefine.templateDL" },
            "4": { "name" : "keyword.meta.defineVariableName.templateDL" }
          }
        },
        { "name": "keyword.meta.templateDL",
          "match": "(?i)\\b(_#DEFINE|_#SET|_#ECHO|_#INCLUDE|_#EOF|_#EXIT|_#IF|_#ELSIF|_#ELSE|_#ENDIF|_#CURSOR|_#BREAK|_#MOVE|_#PUT|_#PUTLINE|_#WORDWRAP|_#WW|_#IFDEF|_#IFNDEF|_#IFSET|_[?])\\b"
        },
        { "name": "keyword.meta.filePath.templateDL",
          "match": "(?i)_#ECHO\\s"
        }
      ]
    },
    "strings": 
    { "patterns": 
      [ { "name"        : "string.quoted.single.templateDL",
          "begin"       : "'",
          "end"         : "'",
          "patterns" : 
          [ { "include" : "#variables" },
            { "include" : "#hostCommands" }
          ]
        },
        { "name": "string.quoted.double.templateDL",
          "begin": "\"",
          "end": "\"",
          "patterns" : 
          [ { "include" : "#variables" },
            { "include" : "#hostCommands" } ]
        },
        { "name": "string.quoted.grave.templateDL",
          "begin": "`",
          "end": "`",
          "patterns" : 
          [ { "include" : "#variables" },
            { "include" : "#hostCommands" } ]
        },
        { "name": "string.quoted.grave.templateDL",
          "begin": "_`",
          "end": "_`",
          "patterns" : 
          [ { "include" : "#variables" },
            { "include" : "#hostCommands" } ]
        }
      ]
    },
    "uris": 
    { "patterns": 
      [ { "name"        : "keyword.uri.templateDL",
          "begin"       : "'",
          "end"         : "'",
          "patterns" : 
          [ { "include" : "#variables" },
            { "include" : "#hostCommands" }
          ]
        },
        { "name": "keyword.uri.templateDL",
          "begin": "\"",
          "end": "\"",
          "patterns" : 
          [ { "include" : "#variables" },
            { "include" : "#hostCommands" } ]
        },
        { "name": "keyword.uri.templateDL",
          "begin": "`",
          "end": "`",
          "patterns" : 
          [ { "include" : "#variables" },
            { "include" : "#hostCommands" } ]
        },
        { "name": "keyword.uri.templateDL",
          "begin": "_`",
          "end": "_`",
          "patterns" : 
          [ { "include" : "#variables" },
            { "include" : "#hostCommands" } ]
        },
        { "patterns": 
        [ { "include": "#strings" },
          { "include": "#variablePattern" }
        ]
      }
      ]
    },
    "variables": {
      "name": "variable.templateDL",
      "match": "(_&.*?)(\\.)(?![\\.])",
      "captures": {
          "1": { "name": "source.templateDL variable.expression.templateDL",
                 "patterns":
                 [ { "include": "#variablePattern" } ] 
               },
          "2": { "name": "variable.name.end.templateDL" }
      }
   },
   "hostCommands":
     { "name"     : "variable.templateDL",
       "match"    : "(_<)(.*)(_<)",
       "captures" : 
       { "1": { "name": "keyword.meta.hostCmd.indicator.templateDL" },
         "2": { "name": "keyword.meta.hostCmd.text.templateDL",
                "patterns": 
                [ { "include"  : "#strings" },
                  { "include"  : "#variablePattern" },
                  { "include"  : "#operators" },
                  { "include"  : "#functionNames" },
                  { "include"  : "#booleanTrueValues" },
                  { "include"  : "#booleanFalseValues" },
                  { "include"  : "#variableNames" },
                  { "include"  : "#numerics" }
               ]
              },
         "3": { "name": "keyword.meta.hostCmd.indicator.templateDL" }
       }
    },
    "continuation" :
    { "name" : "keyword.meta.continue.templateDL",
      "match" : "(?<=(_\\))"
    }
  }
}