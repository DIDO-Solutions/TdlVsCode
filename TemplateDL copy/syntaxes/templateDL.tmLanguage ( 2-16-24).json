{ "scopeName"      : "source.templateDL",
	"$schema"        : "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name"           : "TemplateDL",
	"patterns": [
		{ "include"    : "#comments"
		},
		{ "include"    : "#constants"
		},
		{ "include"    : "#keywords"
		},
		{ "include"    : "#strings"
		},
		{ "include"    : "#variables"
		}
	],
	"repository"     : 
	{ "definitions": 
	  { "name"       : "keyword.meta.includeArguments.item.templateDL",
	  	"patterns"   : 
	  	[ { "name"   : "keyword.meta.includeArguments.name.templateDL",
	  			"match"  : "\\b(\\w+)\\b"
	  		},
	  		{ "name"   : "keyword.meta.includeArguments.assignOP.templateDL",
	  			"match"  : "\\s*=\\s*"
	  		},
	  		{ "name"   : "keyword.meta.includeArguments.value.templateDL",
	  			"match"  : "([\"']?)([^\"'\\s]+)\\1(?=\\s|$)",
	  			"captures": 
	  			{ "1": { "name" : "constant.character.escape.templateDL" },
	  				"2": { "name" : "keyword.meta.includeArguments.value.templateDL" }
	  			}
	  		}
	  	]
	  },
		"hostCmdPatterns":
		{ "patterns":
			  [ { "name": "variablePattern",
			     	"match": "(_\\&([A-Za-z0-9_]+)([:]{2})\\s*(.*)\\.)"
          },
          { "name": "source.templateDL keyword.meta.hostCmd.text.templateDL",
			  		"match": "(_<)(.*?)(_\\<)",
			  		"captures": 
			  		{ "1": { "name": "keyword.meta.hostCmd.indicator.templateDL" },
			  			"2": { "name": "keyword.meta.hostCmd.text.templateDL",
			  				     "patterns":
			  				       [ { "name": "string.quoted.double.templateDL",
			  				           "begin": "\"",
			  				           "end": "\"",
			  				           "patterns": 
			  				             [ { "include": "#variablePattern" },
			  				           	   { "name": "constant.character.escape.templateDL",
			  				           		   "match": "\\."
			  				           	   }
			  				             ]
			  				         },
			  				         { "name": "string.quoted.single2.templateDL",
			  				         	 "begin": "'",
			  				         	 "end": "'",
			  				         	 "patterns": 
													 [ { "include": "#variablePattern" },
			  				         	 	{ "name": "constant.character.escape.templateDL",
			  				         	 		"match": "'.'"
			  				         	 	}
			  				         	 ]
			  				         }
			  				       ]
			  			      },
			  			"3": { "name": "keyword.meta.hostCmd.indicator.templateDL" }
			  		}
			  	}
			 ]
		},
	  "comments"     : 
	  { "patterns"   : 
			[ { "name"   : "comment.single.line.templateDL",
					"begin"  : "_//",
					"end"    : "\n"
				},
				{ "name"   : "comment.multi.line.templateDL",
					"begin"  : "_/[*]",
					"end"    : "_[*]/"
				}
			]
		},
		"constants"    : 
		{ "patterns"   : 
		  [ { "name"   : "constant.character",
					"match"  : "(_{|_})"
				},
				{ "name"   : "constant.true.boolean",
					"match"  : "(?i)\\b(TRUE|YES|ON|ENABLE)\\b"
				},
				{ "name"   : "constant.false.boolean",
					"match"  : "(?i)\\b(FALSE|NO|OFF|DISABLE)\\b"
				}
			]
		},
		"keywords"     : 
		{ "patterns"   : 
		  [ { "name"   : "keyword.meta.include.templateDL",
		    	"match"  : "_#INCLUDE\\s+([^\\s]+)\\s*([\\s\\S]*?)(?=\\s*\\b_#INCLUDE\\b|$)",
		    	"captures": 
					{ "1" : { "name"     : "keyword.meta.fileSpecification.templateDL",
		    			      "patterns" : 
							      [ { "include": "#definitions/keyword.meta.includeArguments.item.templateDL" }
		    			      ]
		    		      },
		    		"2":  { "name"         : "keyword.meta.includeArguments.templateDL",
		    			      "patterns"     : 
							      [ { "name"     : "keyword.meta.includeArguments.item.templateDL",
					            	"match"    : "\\b(\\w+)\\b"
					            },
					            { "name"     : "keyword.meta.includeArguments.assignOP.templateDL",
					            	"match"    : "\\s*=\\s*"
					            },
					            { "name"     : "keyword.meta.includeArguments.value.templateDL",
					            	"begin"    : "([\"'])?([^\"'\\s]+)\\1(?=\\s|$)",
					            	"end"      : "\\1(?=\\s|$)",
					            	"patterns" : 
					            	[ { "name" : "constant.character.escape.templateDL",
					            			"match": "\\."
					            		}
					            	]
					            }
				            ]
		    		     }
		    	 }
		     },
			   { "name"     : "keyword.meta.hostCmd.templateDL",
					  "match"   : "(_<)(.*?)(_\\<)",
					  "captures":
						{ "1": { "name"        : "keyword.meta.hostCmd.indicator.templateDL" },
						  "2": { "name"        : "keyword.meta.hostCmd.text.templateDL",
						  	     "patterns"    : 
										   [ { "name"     : "string.quoted.double.templateDL",
						  	     	   	 "begin"    : "\"",
						  	     	   	 "end"      : "\"",
						  	     	   	 "patterns" : 
						  				   	 [ { "include": "#variablePattern"
						  	     	   	 	 },
						  	     	   	 	 { "name" : "constant.character.escape.templateDL",
						  	     	   	 	   "match": "\\."
						  	     	   	 	 }
						  	     	   	 ]
						  	     	   },
						  	     	   { "name"     : "string.quoted.single1.templateDL",
						  	     	   	 "begin"    : "'",
						  	     	   	 "end"      : "'",
						  	     	   	 "patterns" : 
											   	 [ { "include": "#variablePattern"
						  	     	    		},
						  	     	    		{ "name"  : "constant.character.escape.templateDL",
						  	     	    			"match" : "'.'"
						  	     	    		}
						  	     	   	 ]
						  	     	   }
						  	       ]
						       },
						  "3": { "name": "keyword.meta.hostCmd.indicator.templateDL" }
					  }						 
				},
				{ "name"      : "keyword.meta.defineCursorStatement.templateDL",
					"match"     : "(?<=(_\\#CURSOR\\s))([A-Za-z0-9_]+)\\s*(?:\\b(SQL|CSV|JSON|XMI)\\b\\s*)?",
					"captures"  :
					{ "1": { "name" : "keyword.meta.looping.templateDL" },
						"2": { "name" : "keyword.meta.defineCursorName.templateDL" },
						"3": { "name" : "keyword.meta.context.templateDL" },
						"4": { "name" : "keyword.meta.defineCursorStatement.templateDL"}
					}
				},
				{ "name": "keyword.meta.conditional.templateDL",
					"match": "^\\s*\\b(_\\#IF|_\\#ELSEIF|_[?])\\s+(.*)$",
					"captures" : {
					"1" : { "name" : "keyword.meta.conditional.templateDL" },
					"2" : { "name" : "keyword.meta.hostCmd.text.templateDL" }
					}
				},
				{ "name": "keyword.meta.conditional.templateDL",
					"match": "^\\s*\\b(_\\#ELSE|_\\#ENDIF)\\b.*$"
				},
				{ "name": "keyword.meta.conditional.templateDL",
					"match": "^\\s*\\b(_\\#IFDEF|_\\#IFNDEF|_\\#IFSET|_\\#IFNSET)\\b\\s+(.*)$",
					"captures" : {
					"1" : { "name" : "keyword.meta.conditional.templateDL" },
					"2" : { "name" : "keyword.meta.defineVariableName.templateDL" }
					}
				},
				{ "name": "source.templateDL meta.terminate.templateDL",
					"match": "(?i)\\b(_\\#EXIT)\\b"
				},
				{ "name": "keyword.meta.looping.templateDL",
					"match": "(?i)\\b(_\\#LOOP|_\\#ENDLOOP)\\b"
				},
				{ "name": "keyword.meta.looping.templateDL",
				  "match" : "(?<=\\b(_\\#LOOP)\\b)\\s*([A-Za-z0-9_]+)",
					"captures" : {
						"1" : { "name": "keyword.meta.looping.templateDL" },
            "2" : { "name": "keyword.meta.defineCursorName.templateDL" }
			    }
				},
				{ "name": "keyword.meta.looping.move.templateDL",
					"match": "^\\s*(_\\#MOVE)\\s*?([+|-])?([0-9_]+)",
					"captures": {
						"1": { "name" : "keyword.meta.looping.move.templateDL" },
						"2": { "name" : "keyword.meta.looping.move.direction.templateDL" },
						"3": { "name" : "keyword.meta.looping.move.steps.templateDL" }
					}
				},
				{ "name"        : "keyword.meta.looping.break.templateDL",
					"match"       : "(?i)^\\s*\\b(_\\#BREAK)\\b"
				},
				{ "name"        : "keyword.meta.output.templateDL",
					"match"       : "(?i)\\b(_#OUTPUT|_#WORDWRAP|_#WW)\\b"
				},
				{ "name"        : "keyword.meta.output.templateDL",
					"match"       : "(?i)\\b(_#PUT|_#PUTLINE)\\b(.*)",
					"captures":
					{ "2": { "name" : "keyword.meta.output.text.templateDL" }
					}
				},
				{ "name"        : "keyword.meta.conditional.special.templateDL",
					"match"       : "(_[?]|_:|\\s*_\\\\s*$)"
				},
				{ "name"        : "keyword.meta.macro.templateDL",
					"match"       : "\\b(_#(?!BREAK|CURSOR|DUMP|DEBUG|TRACE|DEFINE|ECHO|EOF|ENDIF|EXIT|IF|IFDEF|IFNDEF|IFSET|IFNSET|ENDIF|ELSEIF|ELSE|INCLUDE|LOOP|ENDLOOP|{|}|MOVE|OUTPUT|PUT|PUTLINE|SET|WW)\\w+)\\b"
				},
				{ "name"        : "keyword.meta.define.templateDL",
					"match"       : "(?<=(_\\#DEFINE\\s))([A-Za-z0-9_]+)?([:]{2})?\\s*?([A-Za-z0-9_]+)?\\s*(.*)?$",
					"captures"    :
					{ "2": { "name" : "keyword.meta.defineVariableName.templateDL" },
						"3": { "name" : "keyword.meta.pseudoElement.templateDL" },
						"4": { "name" : "keyword.meta.pseudoElement.templateDL" },
						"5": { "name" : "keyword.meta.defineVariableValue.templateDL",
						       "patterns" : 
						       [ {"include": "#hostCmdPatterns" } ]
						     }
					}
				},
				{ "name"     : "keyword.meta.fileSpecification.templateDL",
					"match"    : "(?<=(?i)_\\#SET\\s)\\s*(TYPE)\\s*(.*)?",
					"captures" : {
						"1": { "name" : "keyword.meta.context.templateDL" },
						"2": { "name" : "keyword.meta.fileSpecification.templateDL",
						       "patterns" : 
						         [ {"include": "#hostCmdPatterns" } ]
					       }
					}
				},
				{ "name": "keyword.meta.define.templateDL",
				  "match": "(?<=(_\\#SET\\s))\\s*(ENVIRONMENT|GLOBAL)?\\s*([A-Za-z0-9_]+)?([:]{2})?\\s*(.*)$",
				  "captures":
				  { "1": { "name": "keyword.meta.define.templateDL" },
				    "2": { "name": "keyword.meta.context.templateDL" },
				    "3": { "name": "keyword.meta.defineVariableName.templateDL" },
				    "4": { "name": "keyword.meta.pseudoElement.templateDL" },
				    "5": { "name": "keyword.meta.defineVariableValue.templateDL",
						       "patterns" : 
						         [ {"include": "#hostCmdPatterns" } ]
				  	     }
				  }
				},
				{ "name"     : "keyword.meta.define.templateDL",
				  "match"    : "(?<=(_\\#SET\\s))\\s*([A-Za-z0-9_]+)?([:]{2})?\\s*?([A-Za-z0-9_]+)?\\s*(.*)?$",
				  "captures" :
				    { "2": { "name" : "keyword.meta.defineVariableName.templateDL" },
					    "3": { "name" : "keyword.meta.pseudoElement.templateDL" },
					    "4": { "name" : "variable.pseudo.operation.name.templateDL" },
					    "5": { "name" : "keyword.meta.defineVariableValue.templateDL" }
				    }
				},
				{ "name": "keyword.meta.setVariableName.templateDL",
				  "match": "(?<=_\\#SET\\s)\\b(?!ENVIRONMENT|GLOBAL)\b\\s+([A-Za-z0-9_]+)?([:]{2})?\\s*?([A-Za-z0-9_]+)?\\s+(.*)$",
				  "captures" : 
				    { "2" : { "name" : "keyword.meta.defineVariableName.templateDL"  },
				      "3" : { "name" : "keyword.meta.pseudoElement.templateDL"  },
				  	  "4" : { "name" : "variable.pseudo.operation.name.templateDL" },
				      "5" : { "name" : "keyword.meta.defineVariableValue.templateDL",
							        "patterns" : 
							        [ {"include": "#hostCmdPatterns" } ]
						        }
				    }
				},
				{ "name": "keyword.meta.setVariableName.templateDL",
					"match": "(?<=_\\#SET\\s)\\s*?(ENVIRONMENT|GLOBAL)?\\s+([A-Za-z0-9_]+)?([:]{2})?\\s*?([A-Za-z0-9_]+)?\\s+(.*)$",
					"captures" : 
            { "2" : { "name" : "keyword.meta.context.templateDL"  },
					    "3" : { "name" : "keyword.meta.defineVariableName.templateDL"  },
					    "4" : { "name" : "keyword.meta.pseudoElement.templateDL"  },
							"5" : { "name" : "variable.pseudo.operation.name.templateDL" },
					    "6" : { "name" : "keyword.meta.defineVariableValue.templateDL" }
					  }
				},
				{ "name": "keyword.meta.debugging.templateDL",
				  "match": "(?i)\\b(_#DUMP|_#ECHO|_#TRACE|_#DEBUG)\\b"
			  },
				{ "name"     : "keyword.meta.debugging.templateDL",
					"match"    : "(?<=(_\\#ECHO\\s))(INPUT|OUTPUT|RULER)?\\s*((?:TRUE|YES|ON|ENABLE|FALSE|NO|OFF|DISABLE)?)?\\s*(.*?)(?=_\\#ECHO|\\r?$)",
					"captures" :
					{ "1" : { "name"     : "keyword.meta.debugging.templateDL" },
						"2" : { "name"     : "keyword.meta.context.templateDL" },
						"3" : { "patterns" : 
						           [ { "name": "constant.true.boolean",
						           		"match": "(?i)\\b(TRUE|YES|ON|ENABLE)\\b"
						           	},
						           	{ "name": "constant.false.boolean",
						           		"match": "(?i)\\b(FALSE|NO|OFF|DISABLE)\\b"
						           	}
						           ]
					        },
						"4" : { "name" : "keyword.meta.textMsg.templateDL",
						        "patterns" : 
						          [ {"include": "#hostCmdPatterns" } ]
					        }
					}
				},
				{ "name": "keyword.meta.debugging.templateDL",
					"match": "(?<=(_\\#DUMP\\s))\\s*\\b(ENVIRONMENT|SETTINGS|STACK|LOCAL|MACROS|CURSORS|ALL)\\b\\s*$",
					"captures": 
          { "1" : { "name" : "keyword.meta.debugging.templateDL" },
						"2" : { "name" : "keyword.meta.context.templateDL" }
					}
				},
				{ "name": "keyword.meta.exitMsg.templateDL",
					"match": "(?<=(_\\#EXIT\\s))\\s*([0-9_]+)?\\s*(.*)?$",
					"captures": {
						"2": {
							"name": "keyword.meta.exitCode.templateDL"
						}
				   }
				},
				{ "name": "keyword.meta.output.options.begin.templateDL",
					"match": "(?<=(_\\#OUTPUT\\s))\\s*(BEGIN)\\s*(.*)?",
					"captures":
					{ "2": { "name" : "keyword.meta.output.options.begin.templateDL" },
						"3": { "name" : "keyword.meta.fileSpecification.templateDL",
						       "patterns" : 
						        [ {"include": "#hostCmdPatterns" } ]
					       }
					}
				},
				{ "name": "keyword.meta.output.options.pause.templateDL",
					"match": "(?<=(_\\#OUTPUT\\s))\\s*(PAUSE)\\s*(.*)?"
				},
				{ "name": "keyword.meta.output.options.resume.templateDL",
					"match": "(?<=(_\\#OUTPUT\\s))\\s*(RESUME)\\s*(.*)?"
				},
				{ "name": "keyword.meta.output.options.close.templateDL",
					"match": "(?<=(_\\#OUTPUT\\s))\\s*(CLOSE)\\s*(.*)?"
				},
				{ "name": "keyword.meta.undefine.templateDL",
				  "match": "(?i)\\b(_#UNSET|_#UNDEF|_#UNDEFINE)\\b"
			  },
				{ "name": "keyword.meta.undefine.templateDL",
					"match": "(?<=(_\\#UNSET\\b)|(_\\#UNDEFINE\\b)|(_\\#UNDEF\\b))\\s*([A-Za-z0-9_]+)",
					"captures": 
					{ "1": { "name" : "keyword.meta.undefine.templateDL" },
						"2": { "name" : "keyword.meta.undefine.templateDL" },
						"3": { "name" : "keyword.meta.undefine.templateDL" },
						"4": { "name" : "keyword.meta.defineVariableName.templateDL" }
					}
				},
				{ "name": "keyword.meta.templateDL",
					"match": "(?i)\\b(_#DEFINE|_#SET|_#ECHO|_#INCLUDE|_#EOF|_#EXIT|_#IF|_#ELSIF|_#ELSE|_#ENDIF|_#CURSOR|_#BREAK|_#MOVE|_#PUT|_#PUTLINE|_#WORDWRAP|_#WW|_#IFDEF|_#IFNDEF|_#IFSET|_[?])\\b"
				},
				{ "name": "keyword.meta.filePath.templateDL",
					"match": "(?i)_#ECHO\\s"
				}
			]
		},
		"strings": 
		{ "patterns": 
		  [ { "name": "string.quoted.double.templateDL",
			    "begin": "\"",
			    "end": "\"",
			    "patterns": [
					  	{ "name": "variable.pattern.templateDL",
					     	"match": "(_\\&([A-Za-z0-9_]+)?([:]{2})?\\s*(.*?)\\.)",
					     	"patterns": [
					     		{ "name": "variable.name.templateDL",
					     			"match": ".*"
					     		},
					     		{ "name": "variable.pseudoOperation.templateDL",
					     			"match": ".*"
					     		}
					     	]
					    },
			    		{ "name": "constant.character.escape.templateDL",
			    			"match": "\\."
			    		}
			    ]
				},
				{ "name": "string.quoted.single.templateDL",
			    "begin": "'",
			    "end": "'",
			    "patterns": [
					  	{ "name": "variable.pattern.templateDL",
					     	"match": "(_\\&([A-Za-z0-9_]+)?([:]{2})?\\s*(.*?)\\.)",
					     	"patterns": [
					     		{ "name": "variable.name.templateDL",
					     			"match": ".*"
					     		},
					     		{ "name": "variable.pseudoOperation.templateDL",
					     			"match": ".*"
					     		}
					     	]
					    },
			    		{
			    				"name": "constant.character.escape.templateDL",
			    				"match": "\\."
			    		}
			    ]
				},
				{ "name": "string.quoted.grave.templateDL",
			    "begin": "`",
			    "end": "`",
			    "patterns": 
				  [ { "name": "variable.pattern.templateDL",
				     	"match": "(_\\&([A-Za-z0-9_]+)?([:]{2})?\\s*(.*?)\\.)",
				     	"patterns": 
				    	[ { "name": "variable.name.templateDL",
				     	    "match": ".*"
				     	  },
				     	  { "name": "variable.pseudoOperation.templateDL",
				     	    "match": ".*"
				     	  }
				     	]
				    },
			        { "name": "constant.character.escape.templateDL",
			          "match": "\\."
			        }
			      ]
				},
				{ "name": "string.quoted.grave.templateDL",
				   "begin": "_`",
				   "end": "_`",
				   "patterns": 
				   [ { "name": "variable.pattern.templateDL",
				   	 	"match": "(_\\&([A-Za-z0-9_]+)?([:]{2})?\\s*(.*?)\\.)",
				   	 	"patterns": 
					 	[ { "name": "variable.name.templateDL",
				   	    	"match": ".*"
				   	 	  },
				   	 	  { "name": "variable.pseudoOperation.templateDL",
				   	        "match": ".*"
				   	 	  }
				   	 	]
				   	 },
				   	 { "name": "constant.character.escape.templateDL",
				   	   "match": "\\."
				   	 }
				   ]
				}
			]
		},
		"variables": 
		{ "patterns": 
		  [ { "name": "variable.pattern.templateDL",
			  "match": "(_\\&([A-Za-z0-9_]+)?([:]{2})?\\s*(.*?)\\.)",
			  "captures": 
			  { "2": { "name": "variable.name.templateDL" },
			    "3": { "name": "keyword.meta.pseudoElement.templateDL" },
			    "4": { "name": "variable.pseudo.operation.name.templateDL" }
			  }
			}
		  ]
		}
	}
	
}