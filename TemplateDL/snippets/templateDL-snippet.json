{ "Insert INCLUDE Meta Command":
	    { "scope": "tdl,TDL,template,templateDL",
	    	"prefix": "_#INCLUDE",
	    	"body": 
	    	  [ "_#INCLUDE ${1:fileName} ${2:optionalArgument}"
	    	  ],
	    	"description": "Add the INCLUDE meta-command to the file."
	    },
		"Insert DEFINE Meta Command":
	    { "scope": "tdl,TDL,template,templateDL",
	    	"prefix": "_#DEFINE",
	    	"body": 
	    	  [ "_#DEFINE ${1:variableName} ${2:variableValue}"
	    	  ],
	    	"description": "Add the DEFINE meta-command to the file."
	    },
		"Insert UNDEFINE Meta Command":
		  { "scope": "tdl,TDL,template,templateDL",
		  	"prefix": "_#UNDEFINE",
		  	"body": 
		  		[ "_#UNDEFINE ${1:variableName}"
		  		],
		  	"description": "Add the UNDEFINE meta-command to the file."
		  },
		"Insert CURSOR Meta Command":
		    { "scope": "tdl,TDL,template,templateDL",
		    	"prefix": "_#CURSOR",
		    	"body": 
		    		[ "_#CURSOR ${1:cursorName} $2| ,CSV,SQL|} _\\",
		    		  "  _`",
		    		  "    ${3:selectStatement}",
		    			"  _`",
		    			"$3"
		    		],
		    	"description": "Add the DEFINE meta-command to the file."
		    },
		"Insert SET ENVIRONMENT value":
		  { "scope": "tdl,TDL,template,templateDL",
		  	"prefix": "metaEnvironmentVarName",
		  	"body": 
		  		[ "${1| factoryName,parentDirectory,rootDirectory,templatePath,dataPath,outputPath,templateName,templateFileExtension,outputFileName,outputFileExtension,resultFileName,resultExtension,suppressBlanks,WwFinalPostfix,WwHyphenate,WwHyphenation,WwInitialPrefix,WwLineLength,  WwPadTheOutput,WwPostfix,WwPrefix,WwQuoteLiterals,WwTextBreak|}"
		  		],
		  	"description": "Add the SET of a predefined meta environment variables to the file."
		  },
		"Insert SET GLOBAL value":
				{ "scope": "tdl,TDL,template,templateDL",
					"prefix": "metaGlobalVarName",
					"body": 
						[ "${1| ,metaCommandIndicator,metaCommandIndicator,metaVarStart,metaVarEnd,metaHostCmd,metaCommentIndicator,metaCommentStart,metaCommentEnd,metaLineContinue,metaTemplateLiteral,metaConditionalOp,metaConditionalDiv,metaEchoInput,metaEchoOutput,metaEchoComment,metaEchoInfo,metaEchoMacro,verboseOutput,diagnostics|}"
						],
					"description": "Add the SET of a predefined meta global variables to the file."
				},
		"Insert SET Meta Command":
				{ "scope": "tdl,TDL,template,templateDL",
					"prefix": "_#SET",
					"body": 
						[ "_#SET ${1| ,ENVIRONMENT,GLOBAL|} ${2:variableName} ${3:variableValue}",
						  "$4"
						],
					"description": "Add the SET meta-command to the file."
				},

		"Insert UNSET Meta Command":
		   { "scope": "tdl,TDL,template,templateDL",
		   	 "prefix": "_#UNSET",
		     "body": 
		   		[ "_#UNSET  ${12:variableName}",
		   			"$4"
		   		],
		    	"description": "Add the UNSET meta-command to the file."
		   },
	  "Insert OUTPUT Meta Command":
	    { "scope": "tdl,TDL,template,templateDL",
	    	"prefix": "_#OUTPUT",
	    	"body": 
	    		[ "_#OUTPUT ${1| ,BEGIN,PAUSE,RESUME,CLOSE|} ${2:filePath}",
	    			"$3"
	    		],
	    	"description": "Add the LOOP meta-command to the file."
	    },
		"Insert PUT Meta Command":
				{ "scope": "tdl,TDL,template,templateDL",
					"prefix": "_#PUT",
					"body": 
						[ "_#PUT ${1:lineOfText}",
							"$2"
						],
					"description": "Add the LOOP meta-command to the file."
				},
		"Insert PUTLINE Meta Command":
				{ "scope": "tdl,TDL,template,templateDL",
					"prefix": "_#PUTLINE",
					"body": 
						[ "_#PUTLINE ${1:lineOfText}",
							"$2"
						],
					"description": "Add the LOOP meta-command to the file."
				},
	  "Insert WW Meta Command":
	  	{ "scope": "tdl,TDL,template,templateDL",
	  		"prefix": "_#WW",
	  		"body": 
	  			[ "_#WW ${1| ,CPP,DEFAULT,HTML,SQL|} ${2:textToWordwrap}",
	  				"$3"
	  			],
	  		"description": "Add the WW meta-command to the file."
	  	},
			"Insert WORDWRAP Meta Command":
	  	{ "scope": "tdl,TDL,template,templateDL",
	  		"prefix": "_#WORDWRAP",
	  		"body": 
	  			[ "_#WORDWRAP ${1| ,CPP,DEFAULT,HTML,SQL|} ${2:textToWordwrap}",
	  				"$3"
	  			],
	  		"description": "Add the WORDWRAP meta-command to the file."
	  	}, "Insert IF Meta Command":
	    { "scope": "tdl,TDL,template,templateDL",
	    	"prefix": "_#IF",
	    	"body": 
	    	  [ "_#IF ( ${1:logicalExpression} )",
					  "  ${2:statements}",
					  "_#ENDIF"
	    	  ],
	    	"description": "Add the IF meta-command to the file."
	    },
	"Insert IFDEF Meta Command":
	    { "scope": "tdl,TDL,template,templateDL",
	    	"prefix": "_#IFDEF",
	    	"body": 
	    	  [ "_#IFDEF ( ${1:variableName} )",
					  "  ${2:statements}",
					  "_#ENDIF"
	    	  ],
	    	"description": "Add the IFDEF meta-command to the file."
	    },
	 
	"Insert IFNDEF Meta Command":
	  { "scope": "tdl,TDL,template,templateDL",
	  	"prefix": "_#IFNDEF",
	  	"body": 
	  		[ "_#IFNDEF ( ${1:variableName} )",
	  			"  ${2:statements}",
	  			"_#ENDIF"
	  		],
	  	"description": "Add the IFNDEF meta-command to the file."
	  },
	"Insert IFSET Meta Command":
	    { "scope": "tdl,TDL,template,templateDL",
	    	"prefix": "_#IFSET",
	    	"body": 
	    	  [ "_#IFSET ( ${1:settingName} )",
					  "  ${2:statements}",
					  "_#ENDIF"
	    	  ],
	    	"description": "Add the IFSET meta-command to the file."
	    },
	 
	"Insert IFNSET Meta Command":
	{ "scope": "tdl,TDL,template,templateDL",
		"prefix": "_#IFNSET",
		"body": 
			[ "_#IFNSET ( ${1:settingName} )",
				"  ${2:statements}",
				"_#ENDIF"
			],
		"description": "Add the IFNSET meta-command to the file."
	},
	 "Insert ELSEIF Meta Command":
	 	 { "scope": "tdl,TDL,template,templateDL",
	 		 "prefix": "_#ELSEIF",
	 		 "body": 
	 			 [ "_#ELSEIF ( ${1:logicalExpression} )",
	 				 "  ${2:statements}"
	 			 ],
	 		 "description": "Add the IF meta-command to the file."
	 	 },
	 "Insert ELSE Meta Command":
	 	 { "scope": "tdl,TDL,template,templateDL",
	 		 "prefix": "_#ELSE",
	 		 "body": 
	 			 [ "_#ELSE",
	 				 "  ${1:statements}"
	 			 ],
	 		 "description": "Add the IF meta-command to the file."
	 	 },
		"Insert QUESTION Meta Command":
			 { "scope": "tdl,TDL,template,templateDL",
				 "prefix": "_?",
				 "body": 
					 [ "_? (${1:logicalExpression}) ${2:trueExpression} _: ${2:falseExpression}"
					 ],
				 "description": "Add the IF meta-command to the file."
			 },
	"Insert FOR LOOP Meta Command":
		 { "scope": "tdl,TDL,template,templateDL",
			 "prefix": "_#LOOP",
			 "body": 
				 [ "_#LOOP ${1:cursorName} ${2:optionalArguments}",
					 "  ${3:statements}",
					 "_#ENDLOOP",
					 "$4"
				 ],
			 "description": "Add the LOOP meta-command to the file."
		 },
	"Insert BREAK Meta Command":
		{ "scope": "tdl,TDL,template,templateDL",
			"prefix": "_#BREAK",
			"body": 
				[ "_#BREAK",
					"$1"
				],
			"description": "Add the LOOP meta-command to the file."
		},
	"Insert MOVE Meta Command":
			{ "scope": "tdl,TDL,template,templateDL",
				"prefix": "_#MOVE",
				"body": 
					[ "_#MOVE ${1| ,UP,PREVIOUS,DOWN,NEXT,TOP,BOTTOM|}",
						"$2"
					],
				"description": "Add the MOVE meta-command to the file."
			},
	"Insert EXIT LOOP Meta Command":
		{ "scope": "tdl,TDL,template,templateDL",
			"prefix": "_#EXIT",
			"body": 
				[ "_#EXIT ${1:errorNumber} ${2:errorMessage}",
					"$3"
				],
			"description": "Add the EXIT meta-command to the file."
		},
	"Insert MACRO LOOP Meta Command":
		{ "scope": "tdl,TDL,template,templateDL",
			"prefix": "_{",
			"body": 
				[ "_{ ${1:macroName} ${2:optionalArguments}",
				  "  ${3:macroCode}",
					"_}",
					"$4"
				],
			"description": "Add the MACRO meta-command to the file."
		}
}